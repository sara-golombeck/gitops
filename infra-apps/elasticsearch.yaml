# apiVersion: argoproj.io/v1alpha1
# kind: Application
# metadata:
#   name: elasticsearch
#   namespace: argocd
# spec:
#   project: default
#   source:
#     repoURL: "https://charts.bitnami.com/bitnami"
#     chart: elasticsearch
#     targetRevision: 21.1.0
#     helm:
#       values: |
#         global:
#           kibanaEnabled: true
#         master:
#           masterOnly: false
#           replicaCount: 2
#           heapSize: "2g"
#           resources:
#             requests:
#               cpu: "0.5"
#               memory: "4Gi"
#             limits:
#               cpu: "1"
#               memory: "6Gi"
#           readinessProbe:
#             enabled: false
#           livenessProbe:
#             enabled: false
#         data:
#           replicaCount: 0
#         ingest:
#           enabled: false
#         coordinating:
#           replicaCount: 0
#         volumeClaimTemplate:
#           accessModes: ["ReadWriteOnce"]
#           resources:
#             requests:
#               storage: 30Gi
#           storageClassName: "gp3"
#         persistence:
#           labels:
#             enabled: true
#         security:
#           enabled: true
#           elasticPassword: "9sRLSqZOhtUpSpyn"
#           tls:
#             restEncryption: true
#             autoGenerated: true
#         kibana:
#           ingress:
#             enabled: false
#           elasticsearch:
#             security:
#               tls:
#                 enabled: true
#                 verificationMode: "none"
#                 usePemCerts: false
#               auth:
#                 enabled: true
#                 kibanaPassword: "9sRLSqZOhtUpSpyn"
#                 createSystemUser: true
#                 elasticsearchPasswordSecret: "elasticsearch"
#           livenessProbe:
#             enabled: false
#           readinessProbe:
#             enabled: false
#   destination:
#     server: "https://kubernetes.default.svc"
#     namespace: logging
#   syncPolicy:
#     automated:
#       prune: true
#       selfHeal: true
#     syncOptions:
#       - ServerSideApply=true
#       - CreateNamespace=true


logLevel: info
config:
  service: |
    [SERVICE]
        Daemon Off
        Flush 1
        Log_Level debug
        Parsers_File /fluent-bit/etc/parsers.conf
        Parsers_File /fluent-bit/etc/conf/custom_parsers.conf
        HTTP_Server On
        HTTP_Listen 0.0.0.0
        HTTP_Port 2020
        Health_Check On
        Trace_Error On
        
  inputs: |
    [INPUT]
        Name systemd
        Tag host.*
        Systemd_Filter _SYSTEMD_UNIT=kubelet.service
        Read_From_Tail On
    [INPUT]
        Name tail
        Path /var/log/containers/*nginx*.log
        Parser docker
        Tag nginx.*
    [INPUT]
        Name tail
        Path /var/log/containers/*_rando_*.log
        Parser docker
        Tag kube.*
        Mem_Buf_Limit 100MB
        Skip_Long_Lines On

  filters: |
    [FILTER]
        Name kubernetes
        Match kube.*
        Merge_Log On
        Keep_Log Off
        Buffer_Size False
        K8S-Logging.Parser On
    [FILTER]
        Name parser
        Match nginx.*
        Key_Name log
        Parser nginx_ingress_parser
        Reserve_Data On
        
  outputs: |
    [OUTPUT]
        Name es
        Match host.*
        Index fluent-bit
        Type _doc
        Host elasticsearch-master.logging.svc.cluster.local
        Port 9200
        tls On
        tls.verify Off
        HTTP_User elastic
        HTTP_Passwd 9sRLSqZOhtUpSpyn
        Logstash_Format On
        Logstash_Prefix node
        Retry_Limit False
        Suppress_Type_Name On
    [OUTPUT]
        Name es
        Match nginx.*
        Index fluent-bit
        Type _doc
        Host elasticsearch-master.logging.svc.cluster.local
        Port 9200
        tls On
        tls.verify Off
        HTTP_User elastic
        HTTP_Passwd 9sRLSqZOhtUpSpyn
        Logstash_Format On
        Logstash_Prefix nginx
        Retry_Limit False
        Suppress_Type_Name On
    [OUTPUT]
        Name es
        Match kube.*
        Index fluent-bit
        Type _doc
        Host elasticsearch-master.logging.svc.cluster.local
        Port 9200
        tls On
        tls.verify Off
        HTTP_User elastic
        HTTP_Passwd 9sRLSqZOhtUpSpyn
        Logstash_Format On
        Logstash_Prefix logstash
        Retry_Limit False
        Suppress_Type_Name On
        
  customParsers: |
    [PARSER]
        Name docker
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep On
    [PARSER]
        Name json
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep On
    [PARSER]
        Name nginx_ingress_parser
        Format regex
        Regex ^[^ ]+ [^ ]+ [^ ]+ (?<remote>[^ ]*) - (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*) "(?<referer>[^\"]*)" "(?<agent>[^\"]*)" (?<request_length>[^ ]*) (?<request_time>[^ ]*) \[(?<proxy_upstream_name>[^ ]*)\] (?<upstream_addr>[^ ]*) (?<upstream_response_length>[^ ]*) (?<upstream_response_time>[^ ]*) (?<upstream_status>[^ ]*) (?<host>[^ ]*) (?<server_protocol>[^ ]*)
        Time_Key time
        Time_Format %d/%b/%Y:%H:%M:%S %z

resources:
  requests:
    cpu: "100m"
    memory: "512M"
  limits:
    cpu: "1000m"
    memory: "1Gi"